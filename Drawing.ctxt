#BlueJ class context
comment0.target=Drawing
comment0.text=\r\n\ Drawing\ is\ where\ the\ action\ happens.\r\n\ \r\n\ The\ Drawing\ constructor\ should\ accept\ a\ File\ parameter\ indicating\ \r\n\ what\ instruction\ file\ to\ utilize.\ \ It\ will\ need\ to\ create\ a\ \r\n\ Scanner\ pointing\ to\ the\ file.\r\n\ \r\n\ It\ should\ also\ accept\ a\ ShapeLibrary\ parameter,\ which\ refers\r\n\ to\ a\ fully\ filled-in\ library\ of\ shapes\ to\ utilize\ for\ drawing.\r\n\ \r\n\ It\ should\ then\ use\ the\ appropriate\ Utility\ static\ methods\r\n\ to\ ask\ for\ the\ retrieval\ of\ one\ CanvasInstruction,\ and\ create\r\n\ a\ loop\ to\ ask\ for\ the\ retrieval\ of\ as\ many\ DrawInstruction\ \r\n\ objects\ as\ there\ are\ drawing\ instruction\ lines\ in\ the\ file.\r\n\ You\ may\ decide\ to\ do\ the\ latter\ by\ saving\ all\ the\ drawing\r\n\ instructions\ into\ an\ ArrayList,\ for\ later\ processing,\ or\ by\r\n\ reading\ each\ drawing\ instruction\ and\ processing\ it\ immediately.\r\n\ \r\n\ You\ must\ then\ do\ the\ work\ of\ drawing.\ \ In\ some\ cases\ that\ will\ \r\n\ involved\ some\ transforms\ on\ the\ data,\ e.g.,\ if\ the\ instruction\r\n\ file\ says\ to\ draw\ the\ shape\ at\ (250,\ 100),\ then\ you\ must\ make\r\n\ that\ happen.\ \ Size\ is\ another\ transform\ that\ you'll\ need\ to\ \r\n\ handle.\ \ Make\ sure\ to\ handle\ transforms\ in\ the\ proper\ order,\r\n\ e.g.,\ do\ you\ size\ first,\ then\ shift\ later,\ or\ the\ reverse?\r\n\ \r\n\ When\ it\ comes\ to\ drawing\ the\ shape,\ you\ only\ need\ a\ couple\ of\r\n\ basic\ Graphics\ methods.\ \ You'll\ need\ .setColor()\ to\ change\ \r\n\ to\ the\ color\ you're\ about\ to\ draw\ with.\ \ You'll\ also\ need\r\n\ .drawPolygon()\ and\ .fillPolygon().\ \ For\ extra\ credit\ a\ few\r\n\ other\ methods\ will\ be\ necessary.\r\n\ \r\n\ Do\ not\ use\ Graphics2D\ to\ do\ any\ of\ this\ work,\ regular\ or\ \r\n\ extra\ credit.\ \ Use\ simple\ graphics\ commands\ and\ math\ to\r\n\ accomplish\ these\ tasks.\r\n
comment1.params=shapeLib\ instructions
comment1.target=Drawing(ShapeLibrary,\ java.io.File)
comment1.text=\r\n\ Constructor\ for\ the\ Drawing\ CLass\r\n\r\n\ @param\ \ shapeLib\ \ the\ shape\ library\ from\ which\ the\ drawing\ draws\ from\r\n\ @param\ \ instructions\ the\ file\ that\ instructs\ the\ canvas\ and\ drawing\ specs\r\n
comment2.params=
comment2.target=void\ draw()
comment2.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ the\ sum\ of\ x\ and\ y\r\n
numComments=3
